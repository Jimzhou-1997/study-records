贪婪算法又叫贪心算法，指在对问题求解时，总是做出在当前看来是最好的选择。也就是说，不从整体最优上加以考虑，他所做出的仅是在某种意义上的局部最优解。

贪心算法没有固定的算法框架，算法设计的关键是贪心策略的选择。必须注意的是，贪心算法不是对所有问题都能得到整体最优解，选择的贪心策略必须具备无后效性，即某个状态以后的过程不会影响以前的状态，只与当前状态有关。

所以对所采用的贪心策略一定要仔细分析其是否满足无后效性。

基本步骤

❖ 建立数学模型来描述问题；

❖ 把求解的问题分成若干个子问题；

❖ 对每一子问题求解，得到子问题的局部最优解；

❖ 把子问题的局部最优解合成原来问题的一个解。

适用问题

具备贪心选择和最优子结构性质的最优化问题

var numDifferentIntegers = function(word) {
  return Array.from(new Set((word.match(/\d+/g) || []).map(item => {
		let i = 0
		while (item[i] === 0) {
			i++
		}
		return item.slice(i)
	}))).length
};